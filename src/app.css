@import 'open-props/style';

:root {
  --header-height: 5.5rem;

  --clr__dk-main: #03080C;
  --clr__dk-almost: rgba(3, 8, 12, .9);
  --clr__dk-half: rgba(3, 8, 12, .5);
  --clr__dk-dim: rgba(3, 8, 12, .1);
  --clr__dk-layer-low: rgb(26, 30, 35);
  --clr__dk-layer-high: rgba(112, 115, 125);
  --clr__lt-main: #DDDEEE;
  --clr__lt-almost: rgba(221, 222, 238, .8);
  --clr__lt-half: rgba(221, 222, 238, .5);
  --clr__lt-dim: rba(221, 222, 238, .2);
  --clr__accent: #d9b526;
  --clr__accent-half: rgba(217, 181, 38, .5);
  --clr__accent-dim: rgba(217, 181, 38, .1);
  --clr__error: rgba(206, 59, 18);
  --clr__success: rgb(45, 117, 0);

  --under-shadow: 0 20px 4px -20px var(--clr__dk-main);
}

*, *::before, *::after {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  writing-mode: horizontal-tb;
}

*::before, *::after {
  content: '';
  position: absolute;
}

html {
  min-width: 100vw;
  min-height: 100vh;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
  letter-spacing: var(--font-letterspacing-4);
}

body, #svelte {
  position: relative;
  min-width: 100%;
  min-height: 100%;
}

#svelte {
  background: linear-gradient(
    90deg,
    var(--clr__lt-almost) 0%,
    #fff 20%,
    #fff 80%,
    var(--clr__lt-almost) 100%
  );
}

h1, h2, h3, h4, h5, h6 {
  cursor: default;
}

ul {
  list-style-type: none;
}

a, a:visited, a:-webkit-any-link {
  text-decoration: none;
  color: inherit;
}

input, button {
  border: none;
  color: inherit;
  font-size: inherit;
  letter-spacing: var(--font-letterspacing-4);
}

input:is([type=text], [type=email], [type=password], [type=search], [type=url]) {
  padding: .35em .8em;
  border-radius: 0 0 0 7px;
}

input:focus, input:focus-visible {
  outline: none;
  border-bottom: 1px solid var(--clr__lt-main);
}

button {
  border: none;
  background-color: transparent;
  font-family: inherit;
  font-size: inherit;
  color: inherit;
  cursor: pointer;
}

button:disabled {
  opacity: .5;
  cursor: default;
}

.flex {
  display: flex;
  justify-content: center;
  place-items: center;
  gap: var(--size-fluid-3, clamp(1rem, 2vw, 2rem));
}

.stack {
  flex-direction: column;
  justify-content: flex-start;
}

.round, .round::before, .round::after {
  border-radius: 50%;
}

[class*=icono-] {
  color: inherit;
}

.transit {
  position: relative;
  z-index: 1;
  --transit__front: var(--clr__dk-main);
  --transit__layer: var(--clr__dk-layer-low);
  --transit__back: transparent;
  --transit__pop: var(--clr__accent);
  --transit__start: var(--clr__dk-half);
  --transit__end: var(--clr__dk-main);
  --text-start: var(--clr__dk-half);
  --text-end: var(--clr__dk-main);
}

.transit * {
  z-index: 1;
}

.transit,
.transit::before,
.transit::after,
.transit * {
  transition-duration:  0.2s;
  transition-timing-function: ease-out;
  transition-delay: 0s;
}

.transit::before,
.transit::after {
  position: absolute;
  content: "";
  z-index: -1;
  width: 100%;
  height: 100%;
}

/* = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = MODIFIERS =  */
.b-t,
.t-b {
  --transform-end: translateY(0);
}

.b-t {
  --transform-start: translateY(100%);
}

.t-b {
  --transform-start: translateY(-100%);
}

.l-r,
.r-l {
  --transform-end: translateX(0);
}

.l-r {
  --transform-start: translateX(-100%);
}

.r-l {
  --transform-start: translateX(100%);
}

.tl-br,
.tr-bl,
.bl-tr,
.br-tl {
  --transform-end: translate(0%, 0%);
}

.tl-br {
  --transform-start: translate(-100%, -100%);
}

.tr-bl {
  --transform-start: translate(100%, -100%);
}

.bl-tr {
  --transform-start: translate(-100%, 100%);
}

.br-tl {
  --transform-start: translate(100%, 100%);
}

.m-o__hor {
  --transform-start: scaleX(0);
  --transform-end: scaleX(1);
}

.m-o__ver {
  --transform-start: scaleY(0);
  --transform-end: scaleY(1);
}

.m-o__rad {
  --transform-start: scale(0);
  --transform-end: scale(1);
}

/* = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = END MODIFIERS =  */

/* = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = BORDER FILL =  */
.border-fill {
  display: flex;
  flex-direction: column;
  place-items: center;
  justify-content: center;
  overflow: hidden;
}

.border-fill::before {
  background-color: var(--clr__pop);
  transform-origin: top left;
  transform: var(--transform-start);
  transition-property: transform;
}

.border-fill::after {
  width: calc(100% - 0.25em) !important;
  height: calc(100% - 0.25em) !important;
  background-color: var(--clr__layer);
}

.border-fill.hover:hover::before,
.border-fill.click::before {
  transform: var(--transform-end);
}

/* = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = END BORDER FILL =  */

/* = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = FADE =  */
.fade {
  transition-property: opacity;
  opacity: 0.5;
}

.fade::after {
  top: 0;
  left: 0;
}

.fade.hover:hover,
.fade.click {
  opacity: 1;
}

/* = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = END FADE =  */

/* = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = TEXT COLOR =  */
.text-color,
.text-color * {
  transition-property: color;
  color: var(--text-start);
}

.text-color.hover:hover,
.text-color.hover:hover *,
.text-color.click,
.text-color.click * {
  color: var(--text-end);
}

/* = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = END TEXT COLOR =  */

/* = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = BG FILL =  */

.bg-fill {
  overflow: hidden;
}

.bg-fill::after {
  top: 0;
  left: 0;
  background-color: var(--transit__back);
}

.bg-fill::before{
  top: 0;
  left: 0;
  background-color: var(--transit__pop);
  transform: var(--transform-start);
  transition-property: transform;
}

.bg-fill.hover:hover::before,
.bg-fill.click::before {
  transform: var(--transform-end);
}

/* = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = END BG FILL =  */

/* = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = UNDERLINE =  */

.underline {
  overflow: hidden;
}

.underline::after {
  top: 0;
  left: 0;
}

.underline::after {
  border-bottom: 0.125em solid var(--__color-ter);
  transition-property: transform;
  transform: var(--transform-start);
}

.underline.hover:hover::after,
.underline.click::after {
  transform: var(--transform-end);
}